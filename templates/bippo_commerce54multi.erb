server {
    listen      <%= listen %>;
    server_name ~^(?<subdomain>[^.]+)\.<%= real_server_name.gsub('.', '\.') %>$;
    access_log  <%= real_access_log %>;
    client_max_body_size        8M;

    error_page 404 =404 /maintenance.html;
    error_page 502 =502 /maintenance.html;
    error_page 503 =503 /maintenance.html;
    error_page 504 =504 /maintenance.html;
    location = /maintenance.html {
        internal;
        root <%= maintenance_root %>;
        allow all;
    }

<% if ssl -%>
    listen			<%= listen_ssl %> ssl;
    ssl_certificate             <%= real_ssl_certificate %>;
    ssl_certificate_key         <%= real_ssl_certificate_key %>;

    ssl_session_timeout         <%= ssl_session_timeout %>;
<% end -%>

    location / {
        proxy_pass                      <%= appserver_uri %> ;
        proxy_redirect                  http:// $scheme://;
        proxy_set_header                X-Forwarded-Proto $scheme;
        proxy_set_header                X-Real-IP $remote_addr;
        proxy_set_header                X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header                Host $http_host; # cannot use proxy_pass_header here because then it will use the appserver_uri's

	# disable buffering for Comet requests
	# Atmosphere should send X-Accel-Buffering: no instead: http://wiki.nginx.org/HttpProxyModule#proxy_buffering
	#proxy_buffering      off;

	proxy_connect_timeout       3s; # if Tomcat is overloaded, immediately return error page
	proxy_send_timeout          300s;
	proxy_read_timeout          300s;

	# requires nginx 1.3.13+ for websockets support
	# disabled due to Atmosphere bug
        proxy_http_version              1.1;
        proxy_set_header                Upgrade $http_upgrade;
        proxy_set_header                Connection $http_connection;
    }

    location ~ /\. {
        deny  all;
    }

<% if write_user != '' -%>
            auth_basic            on;
            auth_basic_user_file  sites-htpasswd/<%= name %>.htpasswd;
<% end -%>

<% if include  != '' -%>
<%include.each do |inc| %>
    include <%= inc %>;
<% end -%>
<% end -%>
}

# multi behavior is different than normal domains: www to no-www redirect
server {
    listen      <%= listen %>;
    server_name ~^www\.(?<subdomain>[^.]+)\.<%= real_server_name.gsub('.', '\.') %>$;
    access_log  <%= real_access_log %>;
    rewrite     ^ $scheme://$subdomain.<%= real_server_name %>$request_uri permanent;
    
<% if ssl -%>
    listen			<%= listen_ssl %> ssl;
    ssl_certificate             <%= real_ssl_certificate %>;
    ssl_certificate_key         <%= real_ssl_certificate_key %>;

    ssl_session_timeout         <%= ssl_session_timeout %>;
<% end -%>

}

server {
    listen      <%= listen %>;
    server_name ~^(jso|js)\.(?<subdomain>[^.]+)\.<%= real_server_name.gsub('.', '\.') %>$;
    access_log  /var/log/nginx/<%= name %>_access.log;

<% if ssl -%>
    listen			<%= listen_ssl %> ssl;
    ssl_certificate             <%= real_ssl_certificate %>;
    ssl_certificate_key         <%= real_ssl_certificate_key %>;

    ssl_session_timeout         <%= ssl_session_timeout %>;
<% end -%>

    location / {
	proxy_pass                      <%= appserver_uri %>/js/ ;
        proxy_redirect                  http:// $scheme://;
        proxy_set_header                X-Forwarded-Proto $scheme;
	proxy_set_header                X-Real-IP $remote_addr;
	proxy_set_header                X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header                Host $subdomain.<%= real_server_name %>;
    }

    location /tenant_common {
	root <%= home %>/$subdomain/js;
    }

    gzip_http_version   1.0;         # make it work with CloudFront

    expires     1y;
    autoindex   off;
}

server {
    listen      <%= listen %>;
    server_name ~^(skino|skin)\.(?<subdomain>[^.]+)\.<%= real_server_name.gsub('.', '\.') %>$;
    access_log  /var/log/nginx/<%= name %>_access.log;

<% if ssl -%>
    listen			<%= listen_ssl %> ssl;
    ssl_certificate             <%= real_ssl_certificate %>;
    ssl_certificate_key         <%= real_ssl_certificate_key %>;

    ssl_session_timeout         <%= ssl_session_timeout %>;
<% end -%>

    location / {
	proxy_pass                      <%= appserver_uri %>/skin/ ;
        proxy_redirect                  http:// $scheme://;
        proxy_set_header                X-Forwarded-Proto $scheme;
	proxy_set_header                X-Real-IP $remote_addr;
	proxy_set_header                X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header                Host $subdomain.<%= real_server_name %>;
    }

    location /tenant_common {
	root <%= home %>/$subdomain/skin;
    }

    gzip_http_version   1.0;         # make it work with CloudFront

    #etag       on; # doesn't work, at least in nginx 1.3.15, Etag is disabled when content is gzipped
    expires     1y;
    autoindex   off;
}

server {
    # Be careful in aggregating CSS & JavaScript, it will get Expires: 1 year!
    listen      <%= listen %>;
    server_name ~^(imgo|img)\.(?<subdomain>[^.]+)\.<%= real_server_name.gsub('.', '\.') %>$;
    access_log  /var/log/nginx/<%= name %>_access.log;

<% if ssl -%>
    listen			<%= listen_ssl %> ssl;
    ssl_certificate             <%= real_ssl_certificate %>;
    ssl_certificate_key         <%= real_ssl_certificate_key %>;

    ssl_session_timeout         <%= ssl_session_timeout %>;
<% end -%>

    location / {
	proxy_pass                      <%= appserver_uri %>/img/ ;
        proxy_redirect                  http:// $scheme://;
        proxy_set_header                X-Forwarded-Proto $scheme;
	proxy_set_header                X-Real-IP $remote_addr;
	proxy_set_header                X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header                Host $subdomain.<%= real_server_name %>;
    }

    location /tenant_common {
	root <%= home %>/$subdomain/img;
    }

    expires     1y;
    autoindex   off;
}
